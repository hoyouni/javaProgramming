package days30;

/**
 * @Author k≡n¡k
 * @Source Ex01.java
 * @Date 2019. 9. 9. - 오전 7:54:40
 * @Subject 오전 자바 프로젝트 발표.
 *                 스레드
 */
public class Ex01 {

	public static void main(String[] args) {
		// 프로세스( Process ) ? 실행중인 프로그램
		//  ㄱ. 프로세스    =   OS 할당 자원( 메모리 + 데이터 )   + 스레드    구성 
		//  ㄴ. 모든 프로세스는 최소한 main(주) 스레드를 하나 가지고 있다. 
		//  ㄷ. 멀티 스레드 : 프로세스 안에 스레드가 2개 이상....
		//  ㄹ. 그림 13-2
		//      - 싱글 스레드 :   공장(프로세스)  안에서 일꾼( 스레드 ) = 1명
		//      - 멀티 스레드
		
		// 스레드 ( Thread )
		// ㄱ. 프로세스 안의 실제 작업하는 것
		// ㄴ. 하나의 프로세스 내에서 독립적으로 실행되는 (메서드)		
		// ㄷ. 스레드  == 메서드
		
		// p 723 멀티 태스킹과 멀티 스레딩
		// ㄱ. 멀티 태스킹 - OS는 멀티태스킹을 지원하기 때문에
		//                      여러 개의 프로세스가 [동시]에 실행될 수 있다.		
		// ㄴ. 멀티 스레딩 - 프로세스 안에 스레드가 2개 이상 처리 중... 
		
		
		// [CPU]
		// OS - 여러 개의 프로세스 실행...
		
		// [ 멀티스레딩의 장점 ]
		// 1. CPU 사용률 향상
		// 2. 자원을 보다 효율적으로 사용할 수 있다.
		// 3. 사용자에 대한 응답성이 향상된다. 
		// 4. 작업이 분리되어 코드가 간결해진다.
		
		// 참고) 스레드를 가벼운 프로세스 즉 경량 프로세스라고 부르기도 한다. 
		
		// [동기화]
		//                         공유자원[화장실] - 일꾼A(스레드)
		//                         동기화처리 - 잠금(Lock)
		//                         Dead
		// 
		// 일꾼A(스레드)   일꾼B(스레드)     일꾼C(스레드)    일꾼D(스레드)
		
		// [교착상태 (dead lock)]
		// 일꾼A(스레드) 망치,톱,못, 자               일꾼B(스레드)
		//                   자                                톱
		//                   톱                                자
		
		
		// [자바에서 스레드를 구현하고 실행 방법 ]
		// 1. Thread 클래스 상속받아서 구현
		// 2. Runnable 인터페이스를 implements 구현
		
		// 차이점 :   자바 다중 상속 X , 
		
		// 방 청소 일꾼( 스레드 )
		//class 방청소일꾼 extends XX , Thread{
		//class 방청소일꾼 extends XX  implements Runnable{
		
		// }
		


	}

}

// 김지민 ( 09:31 )
// 천재희 ( 09:26 )
// 박성훈 ( 09:20 )


// 박찬호( 15시 학교 조퇴 )





// 김건영
// 박찬호
// 여원경
// 김호연
// 김수빈
// 정경원
//