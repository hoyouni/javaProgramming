package days14;

/**
 * @Author k≡n¡k
 * @Source Ex06.java
 * @Date 2019. 8. 16. - 오후 3:38:00
 * @Subject  p 230 Chapter 06 객체지향적 프로그래밍.
 */
public class Ex06 {

	public static void main(String[] args) {
		// 1. 객체   지향적 프로그래밍
		// OOP
		// [O]bject-[O]riented [P]rogramming
		// 모든 데이터를 오브젝트(object;물체)로 취급하여 프로그래밍 하는 방법
		// 시작객체(Object)+객체(Object)+[객체(Object)]+.... = 프로그램
		// "객체 단위의 프로그래밍 기법(방법)"
		// 객체==개체==물건==부품=Object
		
		// 2. 클래스 : 객체의 설계도
		
		// 3. OOP의 특징 == 클래스 특징.
		//   ㄱ. 재사용 높다. -> 생산성 향상.
		//   ㄴ. 코드 관리 용이 -> 유지, 보수, 확장성 
		//   ㄷ. 신뢰성 높은 프로그래밍... 
		//   A. 상속성 B. 다형성  C. 추상화  D.은닉화.
		
		// 4. 참조타입 : 배열,   [클래스],    인터페이스
		//                new 연산자 의해 힙(동적)영역 실제 기억공간 할당
		//                -> 참조
		// 5. 클래스 선언 형식 
		//            modifier
		//     체크박스      라디오버튼.
		//   [접근지정자] [기타제어자] class 클래스명
		//                 [extends  Super클래스]
		//                 [implements 인터페이스...]    {
	    //   }
		
		// 6. 클래스 설계하는 과정(단계)
		//    ㄱ. 요구, 분석  ***
		//    ㄴ. 특징(속성), 기능(함수,메소드) 목록 작성
		//    ㄷ. 클래스 선언(설계)
		//    ㄹ. 객체 테스트
		//    ㅂ. 문제점 - 유지, 보수...
		//    ㅅ. 상용화
		//    ㅈ. 버젼 관리 + 기능, 문제점 처리...
		
		// 7. 자동차(Car) 설계
		//     ㄱ. 요구 /분석
		//     ㄴ. 특징(속성) , 기능(메소드) 목록 작성.
		//     ㄷ. 클래스 선언(설계)

	}

}
//









//